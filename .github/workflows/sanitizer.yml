name: Sanitizer

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 1 * *"

jobs:
  address-undefined:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        config:
          - { cc: "gcc-10", cxx: "g++-10" }
          - { cc: "clang-11", cxx: "clang++-11" }

    steps:
      - uses: actions/checkout@v2

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: dependencies
          key: ${{ runner.os }}-dependencies-20210226

      - name: Build and install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: sudo bash ./scripts/build-install.sh

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit == 'true'
        run: sudo bash ./scripts/install.sh

      - name: Configure
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=RelWithDebInfo \
          -DKLIB_BUILD_TESTS=ON -DKLIB_SANITIZER="Address;Undefined"
        env:
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}

      - name: Build
        run: cmake --build build --config RelWithDebInfo -j$(nproc)

      - name: Test
        run: cd build ; ctest -C RelWithDebInfo -j$(nproc) --output-on-failure
        env:
          ASAN_OPTIONS: detect_stack_use_after_return=1
          UBSAN_OPTIONS: print_stacktrace=1

  memory:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: dependencies
          key: ${{ runner.os }}-dependencies-memory-20210226

      - name: Build and install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: sudo bash ./scripts/build-install.sh -m

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit == 'true'
        run: sudo bash ./scripts/install.sh -g

      - name: Configure
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=RelWithDebInfo \
          -DKLIB_BUILD_TESTS=ON -DKLIB_SANITIZER=Memory -DKLIB_USE_LIBCXX=ON
        env:
          CC: clang-11
          CXX: clang++-11

      - name: Build
        run: cmake --build build --config RelWithDebInfo -j$(nproc)

      - name: Test
        run: cd build ; ctest -C RelWithDebInfo -j$(nproc) --output-on-failure
        env:
          MSAN_OPTIONS: poison_in_dtor=1

  thread:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: dependencies
          key: ${{ runner.os }}-dependencies-thread-20210226

      - name: Build and install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: sudo bash ./scripts/build-install.sh -t

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit == 'true'
        run: sudo bash ./scripts/install.sh -g

      - name: Configure
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=RelWithDebInfo \
          -DKLIB_BUILD_TESTS=ON -DKLIB_SANITIZER=Thread -DKLIB_USE_LIBCXX=ON
        env:
          CC: clang-11
          CXX: clang++-11

      - name: Build
        run: cmake --build build --config RelWithDebInfo -j$(nproc)

      - name: Test
        run: cd build ; ctest -C RelWithDebInfo -j$(nproc) --output-on-failure
